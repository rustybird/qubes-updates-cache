#!/bin/bash -e

if [[ $1 != rewrite-url && $1 != store-id ]]; then
    echo "Usage: $0 rewrite-url|store-id" >&2
    exit 1
fi


# load configuration

dirs=( {/usr/local,}/etc/qubes-updates-cache/urls/ )
readarray -t files < <(
    find "${dirs[@]}" -maxdepth 1 -name '*.bash' 2>/dev/null |
    sed 's#.*/##' |
    sort -u
)

for f in "${files[@]}"; do
    for d in "${dirs[@]}"; do
        if [[ -e $d/$f ]]; then
            source "$d/$f"
            break
        fi
    done
done

for u in "${upgrades[@]}"; do
    prefix_rewrite_url_names+=( prefix_rewrite_url_"$u" )
done


# preprocess rules

for p in "${prefix_rewrite_url_names[@]}"; do
    declare -n prefix_rewrite_url="$p"

    for i in ${!prefix_rewrite_url[@]}; do
        if [[ ${prefix_rewrite_url[i]} =~ ^[^:]+$ ]]; then
            # simple scheme change
            prefix_rewrite_url[i]+=:${prefix_store_id[i]#*:}
        fi
    done
done


# mangle URLs

case $1 in
    store-id)
         this_prefix_names=( prefix_store_id )
        other_prefix_names=( "${prefix_rewrite_url_names[@]}" )
    ;;
    rewrite-url)
         this_prefix_names=( "${prefix_rewrite_url_names[@]}" )
        other_prefix_names=( prefix_store_id )
    ;;
esac

export LC_ALL=C
while read -r old_url _rest_of_line; do
    new_url=$old_url

    for t in "${this_prefix_names[@]}"; do
        declare -n this_prefix="$t"

        for i in ${!this_prefix[@]}; do
            [[ ${this_prefix[i]} ]] || continue

            if [[ ${regex[i]} ]]; then
                if [[ $old_url =~ ${regex[i]} ]]; then
                    new_url=${this_prefix[i]}
                    new_url+=${BASH_REMATCH[${suffix_captured[i]}]}
                    break 2
                fi
            else
                for o in "${other_prefix_names[@]}"; do
                    declare -n other_prefix="$o"

                    if [[ ${other_prefix[i]} &&
                          $old_url == "${other_prefix[i]}"* ]]; then
                        new_url=${this_prefix[i]}
                        new_url+=${old_url#${other_prefix[i]}}
                        break 3
                    fi
                done
            fi
        done
    done

    if [[ $old_url == "$new_url" ]]; then
        printf '%s: keep %s\n' "$1" "$old_url" >&2
        printf 'ERR\n'
    else
        printf '%s: change %s to %s\n' "$1" "$old_url" "$new_url" >&2
        printf 'OK %s=%s\n' "$1" "$new_url"
    fi
done
