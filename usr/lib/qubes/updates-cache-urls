#!/bin/bash -e

if [[ $1 != rewrite-url && $1 != store-id ]]; then
    echo "Usage: $0 rewrite-url|store-id" >&2
    exit 1
fi


# load configuration

dir2=/etc/qubes-updates-cache/urls
dir1=/usr/local/$dir2

while IFS= read -r -d '' f; do
    PATH=$dir1:$dir2 source -- "$f"
done < <(
    shopt -s nullglob
    for f in "$dir1"/*.bash "$dir2"/*.bash; do
        printf '%s\0' ${f##*/}
    done | sort -uz
)


# preprocess rules

for u in "${upgrades[@]}"; do
    prefix_rewrite_url_names+=( prefix_rewrite_url_"$u" )
done

for p in "${prefix_rewrite_url_names[@]}"; do
    declare -n prefix_rewrite_url="$p"

    for i in ${!prefix_rewrite_url[@]}; do
        if [[ ${prefix_rewrite_url[i]} =~ ^[^:]+$ ]]; then
            # simple scheme change
            prefix_rewrite_url[i]+=:${prefix_store_id[i]#*:}
        fi
    done
done


# mangle URLs

case $1 in
    store-id)
        from_prefix_names=( "${prefix_rewrite_url_names[@]}" )
          to_prefix_names=( prefix_store_id )
    ;;
    rewrite-url)
        from_prefix_names=( prefix_store_id )
          to_prefix_names=( "${prefix_rewrite_url_names[@]}" )
    ;;
esac

export LC_ALL=C
while read -r old_url _rest_of_line; do
    new_url=$old_url

    for t in "${to_prefix_names[@]}"; do
        declare -n to_prefix="$t"

        for i in ${!to_prefix[@]}; do
            [[ ${to_prefix[i]} ]] || continue

            if [[ ${regex[i]} ]]; then
                if [[ $old_url =~ ${regex[i]} ]]; then
                    new_url=${to_prefix[i]}
                    new_url+=${BASH_REMATCH[${suffix_captured[i]}]}
                    break 2
                fi
            else
                for f in "${from_prefix_names[@]}"; do
                    declare -n from_prefix="$f"

                    if [[ ${from_prefix[i]} &&
                          $old_url == "${from_prefix[i]}"* ]]; then
                        new_url=${to_prefix[i]}
                        new_url+=${old_url#"${from_prefix[i]}"}
                        break 3
                    fi
                done
            fi
        done
    done

    if [[ $old_url == "$new_url" ]]; then
        printf '%s: keep %s\n' "$1" "$old_url" >&2
        printf 'ERR\n'
    else
        printf '%s: change %s to %s\n' "$1" "$old_url" "$new_url" >&2
        printf 'OK %s=%s\n' "$1" "$new_url"
    fi
done
